{"version":3,"sources":["DailyWeather.jsx","Weather.jsx","GetWeatherData.jsx","Toggle.jsx","App.js","serviceWorker.js","index.js"],"names":["DailyWeather","console","log","this","props","bool","min","max","dataList","li","main","temp","Math","round","icon","greatest","sum","i","length","weather","today","rain","className","id","description","style","display","flexDirection","alignItems","marginTop","feels_like","wind","speed","humidity","avg","iconSrc","getMostIcon","width","calcMin","dayName","src","alt","currentAndAvgTemp","React","Component","Weather","state","separateIndex","finished","todayDate","Date","getUTCDate","datas","list","dt_txt","substring","toString","setState","day","getUTCDay","days","push","slice","key","doTheMath","GetWeatherData","loading","weatherdata","fetch","then","response","json","data","Toggle","on","toggle","bind","handleClickOut","document","addEventListener","removeEventListener","prevState","event","node","contains","target","children","ref","App","apps","names","comps","onClick","rendering","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.445b6e7a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass DailyWeather extends React.Component {\r\n   componentDidMount(){\r\n      console.log(this.props);\r\n   }\r\n\r\n   // average(data){\r\n   //    let avg = 0;\r\n   //    let sum = 0;\r\n   //    for(let li of this.props.dataList)\r\n   //       sum += li.main.temp;\r\n   //    return avg = Math.round(sum / this.props.dataList.length);\r\n   // }\r\n\r\n   //napi minimumot, false-t megadva napi maximum hőmérsékletet számol\r\n   calcMin(bool){\r\n      let min = 40;\r\n      let max = 0;\r\n      for(let li of this.props.dataList){\r\n         if(min > li.main.temp)\r\n            min = li.main.temp;\r\n         if(max < li.main.temp)\r\n            max = li.main.temp;\r\n      }\r\n      return bool ? Math.round(min) : Math.round(max);\r\n   }\r\n\r\n   //egy nap a legtöbet előforduló ikon kiválasztása\r\n   getMostIcon(){\r\n      let greatest = 0;\r\n      let icon;\r\n      for(let li of this.props.dataList){\r\n         let sum = 0;\r\n         for(let i = 1; i < this.props.dataList.length; i++){\r\n            if(li.weather[0].icon === this.props.dataList[i].weather[0].icon)\r\n               sum++;\r\n         }\r\n         if(sum > greatest){\r\n            greatest = sum;\r\n            icon = li.weather[0].icon;\r\n         }\r\n      }\r\n      // console.log(greatest + icon)\r\n      return icon;\r\n   }\r\n\r\n   //a mai napon az aktuális hőmérséklettel fog visszatérni\r\n   //a maradék 4 napon az adott nap átlaghőmérsékletével\r\n   currentAndAvgTemp(){\r\n\r\n      if(this.props.today === 1){\r\n         let rain = 0;\r\n         if(this.props.dataList[0].rain[\"3h\"] !== 'undefined')\r\n            rain = this.props.dataList[0].rain[\"3h\"];\r\n         // console.log(this.props.dataList[0].rain[\"3h\"])\r\n\r\n         return (\r\n            <div className=\"extras\">\r\n               <span id=\"description\">{this.props.dataList[0].weather[0].description}</span>\r\n               <span id=\"temp\">{Math.round(this.props.dataList[0].main.temp)} °C</span>\r\n               <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"10px\"}}>\r\n                  <span id=\"tempFeelsLike\">Feels like:  {Math.round(this.props.dataList[0].main.feels_like)} °C</span>\r\n                  <span id=\"wind\">Wind: {Math.round(this.props.dataList[0].wind.speed * 3.6)} Km/h</span>\r\n                  <span id=\"humidity\">Humidity:  {this.props.dataList[0].main.humidity}%</span>\r\n                  <span id=\"rain\">Rain:  {rain} Mm</span>\r\n               </div>\r\n            </div>\r\n         )\r\n      }\r\n      else {\r\n         let avg = 0;\r\n         let sum = 0;\r\n         for(let li of this.props.dataList)\r\n            sum += li.main.temp;\r\n         avg = Math.round(sum / this.props.dataList.length);\r\n\r\n         return (\r\n            <span id=\"temp\">{avg} °C</span>\r\n         )\r\n      }\r\n   }\r\n\r\n   render(){\r\n      // const iconUrl = \"http://openweathermap.org/img/w/\" + this.getMostIcon() + \".png\";\r\n      const iconSrc = \"icons/\" + this.getMostIcon() + \".png\";\r\n      // console.log(iconSrc)\r\n      return (\r\n         <div className=\"day-box\" id={this.props.today ? \"today\" : null}>\r\n            <div style={{width: \"100%\"}}>\r\n               <span className=\"min-max-temp min-temp\">{this.calcMin(true)} °C</span>\r\n               <span className=\"min-max-temp max-temp\">{this.calcMin(false)} °C</span>\r\n            </div>\r\n            <span id=\"dayName\">{this.props.dayName}</span>\r\n            <img id=\"wicon\" src={iconSrc} alt=\"\"/>\r\n            {this.currentAndAvgTemp()}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n//éjfél előtt baj van, mert első adat már 00:00:00 ami már köv. nap\r\n\r\nexport default DailyWeather\r\n","import React from 'react'\r\nimport DailyWeather from './DailyWeather'\r\n\r\nclass Weather extends React.Component {\r\n   constructor(){\r\n      super();\r\n      this.state = {\r\n         separateIndex: null,\r\n         finished: false\r\n      }\r\n   }\r\n\r\n   //megkeresi a mai nap végét, addig tölt\r\n   componentDidMount(){\r\n      let todayDate = new Date().getUTCDate();\r\n      let i = 0;\r\n\r\n      if(todayDate < 10)\r\n         todayDate = \"0\" + todayDate;\r\n\r\n      while(true){\r\n         if(this.props.datas.list[i].dt_txt.substring(8,10) !== todayDate.toString()){\r\n            this.setState({\r\n               separateIndex: i,\r\n               finished: true\r\n            });\r\n            break;\r\n         }\r\n         // console.log(i);\r\n         i++;\r\n      }\r\n   }\r\n\r\n   //napokra bontás(+adott nap nevének átadása), class-ek létrehozása\r\n   doTheMath(){\r\n      let day = new Date().getUTCDay();\r\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n      const temp = [];\r\n\r\n      //mai nap az előbb megkeresett index alapján\r\n      temp.push(<DailyWeather\r\n         dataList={this.props.datas.list.slice(0, this.state.separateIndex)}\r\n         key={0}\r\n         today={1}\r\n         dayName={days[day]}\r\n      />);\r\n\r\n      //többi 4 nap létrehozása, dayName: a day == 7 = vasárnap, ami viszont az első elem van a tömbben(i: 0)\r\n      for(let i = 0; i < 4; i++){         \r\n         temp.push(<DailyWeather\r\n            dataList={this.props.datas.list.slice(this.state.separateIndex + (8*i), 8+(this.state.separateIndex + (8*i)))}\r\n            key={i+1}\r\n            today={0}\r\n            dayName={7 === (day+i+1) ? days[0] : days[day+i+1]}\r\n         />);\r\n\r\n         if((day+i+1) === 7)\r\n            day = -i-1;\r\n      }\r\n      return temp;\r\n   }\r\n\r\n   render(){\r\n      // console.log(this.state.separateIndex)\r\n\r\n      if(this.state.finished){\r\n         return (\r\n            <div className=\"weather\">\r\n               <span id=\"cityName\">Törökbálint</span>\r\n               <div className=\"weather-container\">\r\n                  {this.doTheMath()}\r\n               </div>\r\n            </div>\r\n         )\r\n      }\r\n      else {\r\n         return (\r\n            <div>Working on it...</div>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport Weather from './Weather'\r\n\r\nclass GetWeatherData extends React.Component {\r\n   constructor(){\r\n      super();\r\n      this.state = {\r\n         loading: true,\r\n         weatherdata: {}\r\n      }\r\n   }\r\n\r\n   //component létrehozásakor api hívás, adatok eltárolása\r\n   componentDidMount(){\r\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?id=3043778&units=metric&appid=dc27a93434715093ef48247d2907c171\")\r\n         .then(response => response.json())\r\n         .then(data => {\r\n            this.setState({\r\n               weatherdata: data,\r\n               loading: false\r\n            });\r\n         })\r\n   }\r\n\r\n   //adatok átadása - Weather.jsx - napokra bontás\r\n   render(){\r\n      if(this.state.loading){\r\n         return (\r\n            <div>Loading...</div>\r\n         )\r\n      }\r\n      else {\r\n         return (\r\n            <Weather datas={this.state.weatherdata}/>\r\n         )\r\n      }\r\n   }\r\n}\r\n\r\n\r\nexport default GetWeatherData\r\n","import React from 'react'\r\n\r\nclass Toggle extends React.Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n         on: false\r\n      }\r\n      this.toggle = this.toggle.bind(this);\r\n      this.handleClickOut = this.handleClickOut.bind(this);\r\n   }\r\n\r\n   componentDidMount(){\r\n      document.addEventListener('mousedown', this.handleClickOut, false);\r\n   }\r\n\r\n   componentWillUnmount(){\r\n      document.removeEventListener('mousedown', this.handleClickOut, false);\r\n   }\r\n\r\n   toggle(){\r\n      this.setState(prevState => {\r\n         return {\r\n            on: true\r\n         }\r\n      });\r\n   }\r\n\r\n   handleClickOut(event){\r\n      if(this.node.contains(event.target)){\r\n         return;\r\n      }\r\n\r\n      this.setState({\r\n            on: false\r\n      });\r\n   }\r\n\r\n   render(){\r\n      const { children } = this.props;\r\n      return (\r\n         <div ref={node => this.node = node} >\r\n            {\r\n            children({\r\n               on: this.state.on,\r\n               toggle: this.toggle\r\n            })\r\n            }\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Toggle\r\n\r\n/*\r\nconst { children } = this.props;\r\nreturn children({\r\n   on: this.state.on,\r\n   toggle: this.toggle\r\n});\r\n*/\r\n","import React from 'react'\nimport './App.css'\nimport GetWeatherData from './GetWeatherData'\nimport Toggle from './Toggle'\n\nclass App extends React.Component {\n   //Appok megjelenítése kis képeken\n   //Toggle class miatt lehet megnyitni, majd kívülre kattintással bezárni az adott appot\n   rendering(){\n      const apps = [<GetWeatherData />];\n      const names = [\"Weather App\", \"Place Holder\", \"Place Holder\", \"Place Holder\", \"Place Holder\", \"Place Holder\", \"Place Holder\"];\n      const comps = [];\n      for(let i = 0; i < 6; i++){\n         comps.push(\n            <Toggle key={i}>\n               {\n               ({on, toggle}) => (\n                  <div className=\"app-container\">\n                     <span id=\"app-name\">{names[i]}</span>\n                     <div className=\"app\" onClick={toggle}>\n                        {i === 0 && <img src=\"icons/sunny.svg\" alt=\"Something went wrong...\"/>}\n                        {(i === 0 && on) && apps[0]}\n                     </div>\n                  </div>\n               )\n               }\n            </Toggle>\n         );\n      }\n      return comps;\n   }\n\n   render(){\n     return (\n        <div>\n           <div id=\"background\">\n              <div className=\"main-content\">\n                 {this.rendering()}\n              </div>\n           </div>\n        </div>\n     );\n   }\n}\n\nexport default App\n\n/*\n\n   //egy sima arrow function, ami a Toggle class props-a lesz\n\nrender(){\n   return (\n      <Toggle\n         {\n         ({on, toggle}) => (\n            <div>\n               {on && <hi>Show me</hi>}          //csak akkor jelenik meg a Show me, ha az 'on' true\n               <button onClick={toggle}>Show / Hide</button>\n            </div>\n         )\n         }\n      />\n   )\n}\n\n   //\n\nToggleRenderProps:\n   render(){\n      const { children } = this.props;\n      return children({\n         on: this.state.on,\n         toggle: this.toggle\n      });\n   }\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// \n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n   <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}